name: Ejecutar scraper de noticias

on:
  schedule:
    - cron: "0 7-20 * * 1-5"
  workflow_dispatch:

jobs:
  run-scraper:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # üî• Permite hacer commit y push

    steps:
      # 1Ô∏è‚É£ Clona el repo completo (necesario para poder hacer commits)
      - name: Checkout del repositorio
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # importante para poder hacer push

      # 2Ô∏è‚É£ Configura Python
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3Ô∏è‚É£ Instala dependencias
      - name: Instalar dependencias
        run: pip install -r requirements.txt

      # 4Ô∏è‚É£ Ejecuta el scraper
      - name: Ejecutar scraper
        env:
          URL: ${{ vars.URL }}
          KEYWORDS: ${{ vars.KEYWORDS }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: python scraper_alerts.py

      # 5Ô∏è‚É£ Guarda el archivo actualizado en el repo
      - name: Guardar archivo actualizado
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add sent_alerts.txt || true
          git diff --staged --quiet || (git commit -m "chore: update sent_alerts.txt [skip ci]" && git push)
